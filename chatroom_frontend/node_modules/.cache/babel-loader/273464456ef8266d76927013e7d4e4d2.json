{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst Chatroom = () => {\n  _s();\n\n  const [publicChat, setPublicChat] = useState([]);\n  const [userData, setUserData] = useState({\n    username: \"\",\n    recievername: \"\",\n    connected: false,\n    message: \"\"\n  });\n\n  const handleUserName = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      \"username\": value\n    });\n  };\n\n  const registerUser = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onPublicMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessageReceived);\n  };\n\n  const onPublicMessageReceived = payload => {\n    let payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        break;\n\n      case \"MESSAGE\":\n        publicChat.push(payloadData);\n        setPublicChat([...publicChat]);\n        break;\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter the user name\",\n        value: userData.username,\n        onChange: handleUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatroom, \"I3HOT42pNUlPUZXi2kj8oZx2tco=\");\n\n_c = Chatroom;\nexport default Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","over","SockJS","stompClient","Chatroom","publicChat","setPublicChat","userData","setUserData","username","recievername","connected","message","handleUserName","event","value","target","registerUser","Sock","connect","onConnected","onError","subscribe","onPublicMessageReceived","onPrivateMessageReceived","payload","payloadData","JSON","parse","body","status","push","err","console","log"],"sources":["/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {over} from \"stompjs\";\nimport SockJS from \"sockjs-client\";\n\nvar stompClient = null;\nconst Chatroom = () => {\n\nconst [publicChat, setPublicChat ] = useState([]);\n\nconst [userData, setUserData] = useState({\n    username: \"\",\n    recievername:\"\",\n    connected: false,\n    message:\"\"\n})\n\nconst handleUserName = (event) => {\n    const {value} = event.target;\n    setUserData({...userData, \"username\" : value});\n}\n\nconst registerUser = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n}\n\nconst onConnected = () => {\n    setUserData({...userData, \"connected\": true});\n    stompClient.subscribe('/chatroom/public', onPublicMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessageReceived);\n}\n\nconst onPublicMessageReceived = (payload) => {\n    let payloadData = JSON.parse(payload.body);\n    switch(payloadData.status){\n        case \"JOIN\":\n            break;\n        case \"MESSAGE\":\n            publicChat.push(payloadData);\n            setPublicChat([...publicChat]);\n            break;\n    }\n}\n\nconst onError = (err) => {\n    console.log(err);\n}\n\n  return (\n    <div className='container'>\n        {userData.connected?\n        <div>\n\n        </div>\n        :\n        <div className='register'>\n            <input id=\"user-name\" placeholder='Enter the user name' value={userData.username} onChange={handleUserName} />\n            <button type=\"button\" onClick={registerUser} >connect</button>\n        </div>}    \n    </div>\n  )\n}\n\nexport default Chatroom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,IAAIC,WAAW,GAAG,IAAlB;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAEvB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;EAEA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;IACrCS,QAAQ,EAAE,EAD2B;IAErCC,YAAY,EAAC,EAFwB;IAGrCC,SAAS,EAAE,KAH0B;IAIrCC,OAAO,EAAC;EAJ6B,CAAD,CAAxC;;EAOA,MAAMC,cAAc,GAAIC,KAAD,IAAW;IAC9B,MAAM;MAACC;IAAD,IAAUD,KAAK,CAACE,MAAtB;IACAR,WAAW,CAAC,EAAC,GAAGD,QAAJ;MAAc,YAAaQ;IAA3B,CAAD,CAAX;EACH,CAHD;;EAKA,MAAME,YAAY,GAAG,MAAM;IACvB,IAAIC,IAAI,GAAG,IAAIhB,MAAJ,CAAW,0BAAX,CAAX;IACAC,WAAW,GAAGF,IAAI,CAACiB,IAAD,CAAlB;IACAf,WAAW,CAACgB,OAAZ,CAAoB,EAApB,EAAwBC,WAAxB,EAAqCC,OAArC;EACH,CAJD;;EAMA,MAAMD,WAAW,GAAG,MAAM;IACtBZ,WAAW,CAAC,EAAC,GAAGD,QAAJ;MAAc,aAAa;IAA3B,CAAD,CAAX;IACAJ,WAAW,CAACmB,SAAZ,CAAsB,kBAAtB,EAA0CC,uBAA1C;IACApB,WAAW,CAACmB,SAAZ,CAAsB,WAAWf,QAAQ,CAACE,QAApB,GAA+B,UAArD,EAAiEe,wBAAjE;EACH,CAJD;;EAMA,MAAMD,uBAAuB,GAAIE,OAAD,IAAa;IACzC,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAlB;;IACA,QAAOH,WAAW,CAACI,MAAnB;MACI,KAAK,MAAL;QACI;;MACJ,KAAK,SAAL;QACIzB,UAAU,CAAC0B,IAAX,CAAgBL,WAAhB;QACApB,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;QACA;IANR;EAQH,CAVD;;EAYA,MAAMgB,OAAO,GAAIW,GAAD,IAAS;IACrBC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACH,CAFD;;EAIE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACKzB,QAAQ,CAACI,SAAT,gBACD;MAAA;MAAA;MAAA;IAAA,QADC,gBAKD;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAO,EAAE,EAAC,WAAV;QAAsB,WAAW,EAAC,qBAAlC;QAAwD,KAAK,EAAEJ,QAAQ,CAACE,QAAxE;QAAkF,QAAQ,EAAEI;MAA5F;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEI,YAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAzDD;;GAAMb,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}