{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst ChatRoom = () => {\n  _s();\n\n  const [publicChats, setPublicChats] = useState([]);\n  const [userData, setUserData] = useState({\n    username: '',\n    receivername: '',\n    connected: false,\n    message: ''\n  });\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    userJoin();\n  };\n\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        break;\n\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      \"message\": value\n    });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      \"username\": value\n    });\n  };\n\n  const registerUser = () => {\n    connect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"member CHATROOM active\",\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"self\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter your name\",\n        name: \"userName\",\n        value: userData.username,\n        onChange: handleUsername,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"wucbaVnm1DSKtJ3YIrxgW0tu/L8=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","over","SockJS","stompClient","ChatRoom","publicChats","setPublicChats","userData","setUserData","username","receivername","connected","message","console","log","connect","Sock","onConnected","onError","subscribe","onMessageReceived","userJoin","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","push","err","handleMessage","event","value","target","sendValue","handleUsername","registerUser","map","chat","index"],"sources":["/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {over} from 'stompjs';\nimport SockJS from 'sockjs-client';\n\nvar stompClient =null;\nconst ChatRoom = () => {\n    const [publicChats, setPublicChats] = useState([]); \n    const [userData, setUserData] = useState({\n        username: '',\n        receivername: '',\n        connected: false,\n        message: ''\n      });\n    useEffect(() => {\n      console.log(userData);\n    }, [userData]);\n\n    const connect =()=>{\n        let Sock = new SockJS('http://localhost:8080/ws');\n        stompClient = over(Sock);\n        stompClient.connect({},onConnected, onError);\n    }\n\n    const onConnected = () => {\n        setUserData({...userData,\"connected\": true});\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        userJoin();\n    }\n\n    const userJoin=()=>{\n          var chatMessage = {\n            senderName: userData.username,\n            status:\"JOIN\"\n          };\n          stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n    }\n\n    const onMessageReceived = (payload)=>{\n        var payloadData = JSON.parse(payload.body);\n        switch(payloadData.status){\n            case \"JOIN\":\n                break;\n            case \"MESSAGE\":\n                publicChats.push(payloadData);\n                setPublicChats([...publicChats]);\n                break;\n        }\n    }\n    \n\n    const onError = (err) => {\n        console.log(err);\n        \n    }\n\n    const handleMessage =(event)=>{\n        const {value}=event.target;\n        setUserData({...userData,\"message\": value});\n    }\n    const sendValue=()=>{\n            if (stompClient) {\n              var chatMessage = {\n                senderName: userData.username,\n                message: userData.message,\n                status:\"MESSAGE\"\n              };\n              console.log(chatMessage);\n              stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n              setUserData({...userData,\"message\": \"\"});\n            }\n    }\n\n    const handleUsername=(event)=>{\n        const {value}=event.target;\n        setUserData({...userData,\"username\": value});\n    }\n\n    const registerUser=()=>{\n        connect();\n    }\n    return (\n    <div className=\"container\">\n        {userData.connected?\n        <div className=\"chat-box\">\n            <div className=\"member-list\">\n                <ul>\n                    <li  className=\"member CHATROOM active\">Chatroom</li>\n                </ul>\n            </div>\n            <div className=\"chat-content\">\n                <ul className=\"chat-messages\">\n                    {publicChats.map((chat,index)=>(\n                        <li className=\"self\" key={index}>\n                            <div className=\"message-data\">{chat.message}</div>\n                        </li>\n                    ))}\n                </ul>\n\n                <div className=\"send-message\">\n                    <input type=\"text\" className=\"input-message\" placeholder=\"enter the message\" value={userData.message} onChange={handleMessage} /> \n                    <button type=\"button\" className=\"send-button\" onClick={sendValue}>send</button>\n                </div>\n            </div>\n        </div>\n        :\n        <div className=\"register\">\n            <input\n                id=\"user-name\"\n                placeholder=\"Enter your name\"\n                name=\"userName\"\n                value={userData.username}\n                onChange={handleUsername}\n                margin=\"normal\"\n              />\n              <button type=\"button\" onClick={registerUser}>\n                    connect\n              </button> \n        </div>}\n    </div>\n    )\n}\n\nexport default ChatRoom"],"mappings":"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"},"metadata":{},"sourceType":"module"}