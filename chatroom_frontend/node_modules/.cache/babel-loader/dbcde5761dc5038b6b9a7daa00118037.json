{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chatroom = () => {\n  _s();\n\n  const [userData, setUserData] = useState({\n    username: \"\",\n    recievername: \"\",\n    connected: false,\n    message: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter the user name\",\n        value: userData.username,\n        onChange: handleUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatroom, \"xwk6Nkt4wV9sZ4BtcyH4YExYO4I=\");\n\n_c = Chatroom;\nexport default Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","Chatroom","userData","setUserData","username","recievername","connected","message","handleUserName","registerUser"],"sources":["/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Chatroom = () => {\nconst [userData, setUserData] = useState({\n    username: \"\",\n    recievername:\"\",\n    connected: false,\n    message:\"\"\n})\n\n  return (\n    <div className='container'>\n        {userData.connected?\n        <div>\n\n        </div>\n        :\n        <div className='register'>\n            <input id=\"user-name\" placeholder='Enter the user name' value={userData.username} onChange={handleUserName} />\n            <button type=\"button\" onClick={registerUser} >connect</button>\n        </div>}    \n    </div>\n  )\n}\n\nexport default Chatroom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;IACrCI,QAAQ,EAAE,EAD2B;IAErCC,YAAY,EAAC,EAFwB;IAGrCC,SAAS,EAAE,KAH0B;IAIrCC,OAAO,EAAC;EAJ6B,CAAD,CAAxC;EAOE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UACKL,QAAQ,CAACI,SAAT,gBACD;MAAA;MAAA;MAAA;IAAA,QADC,gBAKD;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAO,EAAE,EAAC,WAAV;QAAsB,WAAW,EAAC,qBAAlC;QAAwD,KAAK,EAAEJ,QAAQ,CAACE,QAAxE;QAAkF,QAAQ,EAAEI;MAA5F;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEC,YAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CArBD;;GAAMR,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}