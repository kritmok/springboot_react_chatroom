{"ast":null,"code":"var _jsxFileName = \"/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst Chatroom = () => {\n  _s();\n\n  const [publicChat, setPublicChat] = useState([]);\n  const [privateChat, setPrivateChat] = useState(new Map());\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: \"\",\n    recievername: \"\",\n    connected: false,\n    message: \"\"\n  });\n\n  const handleUserName = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      \"username\": value\n    });\n  };\n\n  const registerUser = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onPublicMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessageReceived);\n  };\n\n  const onPublicMessageReceived = payload => {\n    let payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChat.get(payloadData.senderName)) {\n          privateChat.get(payloadData.senderName).push(payloadData);\n          setPrivateChat(new Map(privateChat));\n        }\n\n        break;\n\n      case \"MESSAGE\":\n        publicChat.push(payloadData);\n        setPublicChat([...publicChat]);\n        break;\n    }\n  };\n\n  const onPrivateMessageReceived = payload => {\n    let payloadData = JSON.parse(payload);\n\n    if (privateChat.get(payloadData.senderName)) {\n      privateChat.get(payloadData.senderName).push(payloadData);\n      setPrivateChat(new Map(privateChat));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChat.set(payloadData.senderName, list);\n      setPrivateChat(new Map(privateChat));\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), [...privateChat.keys()].map((name, index) => {\n            /*#__PURE__*/\n            _jsxDEV(\"li\", {\n              onClick: () => setTab(name),\n              className: `member ${tab === name && \"active\"}`,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: publicChat.map((chat, index) => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            className: \"message\",\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 71\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: publicChat.map((chat, index) => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            className: \"message\",\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 71\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter the user name\",\n        value: userData.username,\n        onChange: handleUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatroom, \"D1Cbf4B+p5NWCOTd7FGUKLO7y1k=\");\n\n_c = Chatroom;\nexport default Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","over","SockJS","stompClient","Chatroom","publicChat","setPublicChat","privateChat","setPrivateChat","Map","tab","setTab","userData","setUserData","username","recievername","connected","message","handleUserName","event","value","target","registerUser","Sock","connect","onConnected","onError","subscribe","onPublicMessageReceived","onPrivateMessageReceived","payload","payloadData","JSON","parse","body","status","get","senderName","push","list","set","err","console","log","keys","map","name","index","chat"],"sources":["/Users/krit/Desktop/Workspace/chatroom_frontend/src/components/Chatroom.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {over} from \"stompjs\";\nimport SockJS from \"sockjs-client\";\n\nvar stompClient = null;\nconst Chatroom = () => {\n\nconst [publicChat, setPublicChat ] = useState([]);\nconst [privateChat, setPrivateChat] = useState(new Map());\nconst [tab, setTab] = useState(\"CHATROOM\")\n\nconst [userData, setUserData] = useState({\n    username: \"\",\n    recievername:\"\",\n    connected: false,\n    message:\"\"\n})\n\nconst handleUserName = (event) => {\n    const {value} = event.target;\n    setUserData({...userData, \"username\" : value});\n}\n\nconst registerUser = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n}\n\nconst onConnected = () => {\n    setUserData({...userData, \"connected\": true});\n    stompClient.subscribe('/chatroom/public', onPublicMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessageReceived);\n}\n\nconst onPublicMessageReceived = (payload) => {\n    let payloadData = JSON.parse(payload.body);\n    switch(payloadData.status){\n        case \"JOIN\":\n            if(!privateChat.get(payloadData.senderName)){\n                privateChat.get(payloadData.senderName).push(payloadData);\n                setPrivateChat(new Map(privateChat));\n            } \n            break;\n        case \"MESSAGE\":\n            publicChat.push(payloadData);\n            setPublicChat([...publicChat]);\n            break;\n    }\n}\n\nconst onPrivateMessageReceived = (payload) => {\n    let payloadData = JSON.parse(payload);\n    if(privateChat.get(payloadData.senderName)){\n        privateChat.get(payloadData.senderName).push(payloadData);\n        setPrivateChat(new Map(privateChat));\n    } else {\n        let list = [];\n        list.push(payloadData);\n        privateChat.set(payloadData.senderName, list);\n        setPrivateChat(new Map(privateChat));\n    }\n}\n\nconst onError = (err) => {\n    console.log(err);\n}\n\n  return (\n    <div className='container'>\n        {userData.connected?\n        <div className='chat-box'>\n            <div className=\"member-list\">\n                <ul>\n                    <li onClick={() => {setTab(\"CHATROOM\")}} className={`member ${tab===\"CHATROOM\" && \"active\"}`}>Chatroom</li>\n                    {[...privateChat.keys()].map((name, index) => {\n                        <li onClick={() => setTab(name)} className={`member ${tab===name && \"active\"}`} key={index}>\n                            {name}\n                        </li>\n                    })}\n                </ul>\n            </div>\n           {tab===\"CHATROOM\" && <div className=\"chat-content\">\n            {publicChat.map((chat, index) => {\n                        <li className=\"message\" key={index}>\n                            {chat.senderName !== userData.username && <div className='avatar'>{chat.senderName}</div>}\n                            <div className=\"message-data\">{chat.message}</div>\n                            {chat.senderName === userData.username && <div className='avatar'>{chat.senderName}</div>}\n                        </li>\n                    })}\n            </div> }\n           {tab!==\"CHATROOM\" && <div className=\"chat-content\">\n            {publicChat.map((chat, index) => {\n                        <li className=\"message\" key={index}>\n                            {chat.senderName !== userData.username && <div className='avatar'>{chat.senderName}</div>}\n                            <div className=\"message-data\">{chat.message}</div>\n                            {chat.senderName === userData.username && <div className='avatar'>{chat.senderName}</div>}\n                        </li>\n                    })}\n            </div> }\n        </div>\n        :\n        <div className='register'>\n            <input id=\"user-name\" placeholder='Enter the user name' value={userData.username} onChange={handleUserName} />\n            <button type=\"button\" onClick={registerUser} >connect</button>\n        </div>}    \n    </div>\n  )\n}\n\nexport default Chatroom"],"mappings":"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"},"metadata":{},"sourceType":"module"}